// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: test.proto
// Protobuf C++ Version: 5.29.5

#ifndef test_2eproto_2epb_2eh
#define test_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029005
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_test_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_test_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_test_2eproto;
class InputPacket;
struct InputPacketDefaultTypeInternal;
extern InputPacketDefaultTypeInternal _InputPacket_default_instance_;
class MoveMessage;
struct MoveMessageDefaultTypeInternal;
extern MoveMessageDefaultTypeInternal _MoveMessage_default_instance_;
class Packet;
struct PacketDefaultTypeInternal;
extern PacketDefaultTypeInternal _Packet_default_instance_;
class PlayerAttackMessage;
struct PlayerAttackMessageDefaultTypeInternal;
extern PlayerAttackMessageDefaultTypeInternal _PlayerAttackMessage_default_instance_;
class PlayerAttackSpeedSyncMessage;
struct PlayerAttackSpeedSyncMessageDefaultTypeInternal;
extern PlayerAttackSpeedSyncMessageDefaultTypeInternal _PlayerAttackSpeedSyncMessage_default_instance_;
class PlayerAttackSyncMessage;
struct PlayerAttackSyncMessageDefaultTypeInternal;
extern PlayerAttackSyncMessageDefaultTypeInternal _PlayerAttackSyncMessage_default_instance_;
class PlayerEnterSyncMessage;
struct PlayerEnterSyncMessageDefaultTypeInternal;
extern PlayerEnterSyncMessageDefaultTypeInternal _PlayerEnterSyncMessage_default_instance_;
class PlayerExitSyncMessage;
struct PlayerExitSyncMessageDefaultTypeInternal;
extern PlayerExitSyncMessageDefaultTypeInternal _PlayerExitSyncMessage_default_instance_;
class PlayerHealthSyncMessage;
struct PlayerHealthSyncMessageDefaultTypeInternal;
extern PlayerHealthSyncMessageDefaultTypeInternal _PlayerHealthSyncMessage_default_instance_;
class PlayerManaSyncMessage;
struct PlayerManaSyncMessageDefaultTypeInternal;
extern PlayerManaSyncMessageDefaultTypeInternal _PlayerManaSyncMessage_default_instance_;
class PlayerPositionSyncMessage;
struct PlayerPositionSyncMessageDefaultTypeInternal;
extern PlayerPositionSyncMessageDefaultTypeInternal _PlayerPositionSyncMessage_default_instance_;
class PlayerUseSkillMessage;
struct PlayerUseSkillMessageDefaultTypeInternal;
extern PlayerUseSkillMessageDefaultTypeInternal _PlayerUseSkillMessage_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class PlayerUseSkillMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayerUseSkillMessage) */ {
 public:
  inline PlayerUseSkillMessage() : PlayerUseSkillMessage(nullptr) {}
  ~PlayerUseSkillMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerUseSkillMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerUseSkillMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerUseSkillMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerUseSkillMessage(const PlayerUseSkillMessage& from) : PlayerUseSkillMessage(nullptr, from) {}
  inline PlayerUseSkillMessage(PlayerUseSkillMessage&& from) noexcept
      : PlayerUseSkillMessage(nullptr, std::move(from)) {}
  inline PlayerUseSkillMessage& operator=(const PlayerUseSkillMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerUseSkillMessage& operator=(PlayerUseSkillMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerUseSkillMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerUseSkillMessage* internal_default_instance() {
    return reinterpret_cast<const PlayerUseSkillMessage*>(
        &_PlayerUseSkillMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(PlayerUseSkillMessage& a, PlayerUseSkillMessage& b) { a.Swap(&b); }
  inline void Swap(PlayerUseSkillMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerUseSkillMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerUseSkillMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerUseSkillMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerUseSkillMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerUseSkillMessage& from) { PlayerUseSkillMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerUseSkillMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PlayerUseSkillMessage"; }

 protected:
  explicit PlayerUseSkillMessage(::google::protobuf::Arena* arena);
  PlayerUseSkillMessage(::google::protobuf::Arena* arena, const PlayerUseSkillMessage& from);
  PlayerUseSkillMessage(::google::protobuf::Arena* arena, PlayerUseSkillMessage&& from) noexcept
      : PlayerUseSkillMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSkillPosFieldNumber = 1,
    kTargetPlayerFieldNumber = 2,
    kXFieldNumber = 3,
    kYFieldNumber = 4,
  };
  // uint32 skill_pos = 1;
  void clear_skill_pos() ;
  ::uint32_t skill_pos() const;
  void set_skill_pos(::uint32_t value);

  private:
  ::uint32_t _internal_skill_pos() const;
  void _internal_set_skill_pos(::uint32_t value);

  public:
  // uint32 target_player = 2;
  void clear_target_player() ;
  ::uint32_t target_player() const;
  void set_target_player(::uint32_t value);

  private:
  ::uint32_t _internal_target_player() const;
  void _internal_set_target_player(::uint32_t value);

  public:
  // float x = 3;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 4;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:PlayerUseSkillMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerUseSkillMessage& from_msg);
    ::uint32_t skill_pos_;
    ::uint32_t target_player_;
    float x_;
    float y_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class PlayerPositionSyncMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayerPositionSyncMessage) */ {
 public:
  inline PlayerPositionSyncMessage() : PlayerPositionSyncMessage(nullptr) {}
  ~PlayerPositionSyncMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerPositionSyncMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerPositionSyncMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerPositionSyncMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerPositionSyncMessage(const PlayerPositionSyncMessage& from) : PlayerPositionSyncMessage(nullptr, from) {}
  inline PlayerPositionSyncMessage(PlayerPositionSyncMessage&& from) noexcept
      : PlayerPositionSyncMessage(nullptr, std::move(from)) {}
  inline PlayerPositionSyncMessage& operator=(const PlayerPositionSyncMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerPositionSyncMessage& operator=(PlayerPositionSyncMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerPositionSyncMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerPositionSyncMessage* internal_default_instance() {
    return reinterpret_cast<const PlayerPositionSyncMessage*>(
        &_PlayerPositionSyncMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(PlayerPositionSyncMessage& a, PlayerPositionSyncMessage& b) { a.Swap(&b); }
  inline void Swap(PlayerPositionSyncMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerPositionSyncMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerPositionSyncMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerPositionSyncMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerPositionSyncMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerPositionSyncMessage& from) { PlayerPositionSyncMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerPositionSyncMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PlayerPositionSyncMessage"; }

 protected:
  explicit PlayerPositionSyncMessage(::google::protobuf::Arena* arena);
  PlayerPositionSyncMessage(::google::protobuf::Arena* arena, const PlayerPositionSyncMessage& from);
  PlayerPositionSyncMessage(::google::protobuf::Arena* arena, PlayerPositionSyncMessage&& from) noexcept
      : PlayerPositionSyncMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUidFieldNumber = 1,
    kPosXFieldNumber = 2,
    kPosYFieldNumber = 3,
  };
  // uint32 uid = 1;
  void clear_uid() ;
  ::uint32_t uid() const;
  void set_uid(::uint32_t value);

  private:
  ::uint32_t _internal_uid() const;
  void _internal_set_uid(::uint32_t value);

  public:
  // float pos_x = 2;
  void clear_pos_x() ;
  float pos_x() const;
  void set_pos_x(float value);

  private:
  float _internal_pos_x() const;
  void _internal_set_pos_x(float value);

  public:
  // float pos_y = 3;
  void clear_pos_y() ;
  float pos_y() const;
  void set_pos_y(float value);

  private:
  float _internal_pos_y() const;
  void _internal_set_pos_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:PlayerPositionSyncMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerPositionSyncMessage& from_msg);
    ::uint32_t uid_;
    float pos_x_;
    float pos_y_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class PlayerManaSyncMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayerManaSyncMessage) */ {
 public:
  inline PlayerManaSyncMessage() : PlayerManaSyncMessage(nullptr) {}
  ~PlayerManaSyncMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerManaSyncMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerManaSyncMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerManaSyncMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerManaSyncMessage(const PlayerManaSyncMessage& from) : PlayerManaSyncMessage(nullptr, from) {}
  inline PlayerManaSyncMessage(PlayerManaSyncMessage&& from) noexcept
      : PlayerManaSyncMessage(nullptr, std::move(from)) {}
  inline PlayerManaSyncMessage& operator=(const PlayerManaSyncMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerManaSyncMessage& operator=(PlayerManaSyncMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerManaSyncMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerManaSyncMessage* internal_default_instance() {
    return reinterpret_cast<const PlayerManaSyncMessage*>(
        &_PlayerManaSyncMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(PlayerManaSyncMessage& a, PlayerManaSyncMessage& b) { a.Swap(&b); }
  inline void Swap(PlayerManaSyncMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerManaSyncMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerManaSyncMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerManaSyncMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerManaSyncMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerManaSyncMessage& from) { PlayerManaSyncMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerManaSyncMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PlayerManaSyncMessage"; }

 protected:
  explicit PlayerManaSyncMessage(::google::protobuf::Arena* arena);
  PlayerManaSyncMessage(::google::protobuf::Arena* arena, const PlayerManaSyncMessage& from);
  PlayerManaSyncMessage(::google::protobuf::Arena* arena, PlayerManaSyncMessage&& from) noexcept
      : PlayerManaSyncMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUidFieldNumber = 1,
    kManaFieldNumber = 2,
    kMaxManaFieldNumber = 3,
  };
  // uint32 uid = 1;
  void clear_uid() ;
  ::uint32_t uid() const;
  void set_uid(::uint32_t value);

  private:
  ::uint32_t _internal_uid() const;
  void _internal_set_uid(::uint32_t value);

  public:
  // int32 mana = 2;
  void clear_mana() ;
  ::int32_t mana() const;
  void set_mana(::int32_t value);

  private:
  ::int32_t _internal_mana() const;
  void _internal_set_mana(::int32_t value);

  public:
  // int32 max_mana = 3;
  void clear_max_mana() ;
  ::int32_t max_mana() const;
  void set_max_mana(::int32_t value);

  private:
  ::int32_t _internal_max_mana() const;
  void _internal_set_max_mana(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:PlayerManaSyncMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerManaSyncMessage& from_msg);
    ::uint32_t uid_;
    ::int32_t mana_;
    ::int32_t max_mana_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class PlayerHealthSyncMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayerHealthSyncMessage) */ {
 public:
  inline PlayerHealthSyncMessage() : PlayerHealthSyncMessage(nullptr) {}
  ~PlayerHealthSyncMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerHealthSyncMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerHealthSyncMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerHealthSyncMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerHealthSyncMessage(const PlayerHealthSyncMessage& from) : PlayerHealthSyncMessage(nullptr, from) {}
  inline PlayerHealthSyncMessage(PlayerHealthSyncMessage&& from) noexcept
      : PlayerHealthSyncMessage(nullptr, std::move(from)) {}
  inline PlayerHealthSyncMessage& operator=(const PlayerHealthSyncMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerHealthSyncMessage& operator=(PlayerHealthSyncMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerHealthSyncMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerHealthSyncMessage* internal_default_instance() {
    return reinterpret_cast<const PlayerHealthSyncMessage*>(
        &_PlayerHealthSyncMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(PlayerHealthSyncMessage& a, PlayerHealthSyncMessage& b) { a.Swap(&b); }
  inline void Swap(PlayerHealthSyncMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerHealthSyncMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerHealthSyncMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerHealthSyncMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerHealthSyncMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerHealthSyncMessage& from) { PlayerHealthSyncMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerHealthSyncMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PlayerHealthSyncMessage"; }

 protected:
  explicit PlayerHealthSyncMessage(::google::protobuf::Arena* arena);
  PlayerHealthSyncMessage(::google::protobuf::Arena* arena, const PlayerHealthSyncMessage& from);
  PlayerHealthSyncMessage(::google::protobuf::Arena* arena, PlayerHealthSyncMessage&& from) noexcept
      : PlayerHealthSyncMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUidFieldNumber = 1,
    kHealthFieldNumber = 2,
    kMaxHealthFieldNumber = 3,
  };
  // uint32 uid = 1;
  void clear_uid() ;
  ::uint32_t uid() const;
  void set_uid(::uint32_t value);

  private:
  ::uint32_t _internal_uid() const;
  void _internal_set_uid(::uint32_t value);

  public:
  // int32 health = 2;
  void clear_health() ;
  ::int32_t health() const;
  void set_health(::int32_t value);

  private:
  ::int32_t _internal_health() const;
  void _internal_set_health(::int32_t value);

  public:
  // int32 max_health = 3;
  void clear_max_health() ;
  ::int32_t max_health() const;
  void set_max_health(::int32_t value);

  private:
  ::int32_t _internal_max_health() const;
  void _internal_set_max_health(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:PlayerHealthSyncMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerHealthSyncMessage& from_msg);
    ::uint32_t uid_;
    ::int32_t health_;
    ::int32_t max_health_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class PlayerExitSyncMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayerExitSyncMessage) */ {
 public:
  inline PlayerExitSyncMessage() : PlayerExitSyncMessage(nullptr) {}
  ~PlayerExitSyncMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerExitSyncMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerExitSyncMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerExitSyncMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerExitSyncMessage(const PlayerExitSyncMessage& from) : PlayerExitSyncMessage(nullptr, from) {}
  inline PlayerExitSyncMessage(PlayerExitSyncMessage&& from) noexcept
      : PlayerExitSyncMessage(nullptr, std::move(from)) {}
  inline PlayerExitSyncMessage& operator=(const PlayerExitSyncMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerExitSyncMessage& operator=(PlayerExitSyncMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerExitSyncMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerExitSyncMessage* internal_default_instance() {
    return reinterpret_cast<const PlayerExitSyncMessage*>(
        &_PlayerExitSyncMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(PlayerExitSyncMessage& a, PlayerExitSyncMessage& b) { a.Swap(&b); }
  inline void Swap(PlayerExitSyncMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerExitSyncMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerExitSyncMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerExitSyncMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerExitSyncMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerExitSyncMessage& from) { PlayerExitSyncMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerExitSyncMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PlayerExitSyncMessage"; }

 protected:
  explicit PlayerExitSyncMessage(::google::protobuf::Arena* arena);
  PlayerExitSyncMessage(::google::protobuf::Arena* arena, const PlayerExitSyncMessage& from);
  PlayerExitSyncMessage(::google::protobuf::Arena* arena, PlayerExitSyncMessage&& from) noexcept
      : PlayerExitSyncMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUidFieldNumber = 1,
  };
  // uint32 uid = 1;
  void clear_uid() ;
  ::uint32_t uid() const;
  void set_uid(::uint32_t value);

  private:
  ::uint32_t _internal_uid() const;
  void _internal_set_uid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:PlayerExitSyncMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerExitSyncMessage& from_msg);
    ::uint32_t uid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class PlayerEnterSyncMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayerEnterSyncMessage) */ {
 public:
  inline PlayerEnterSyncMessage() : PlayerEnterSyncMessage(nullptr) {}
  ~PlayerEnterSyncMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerEnterSyncMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerEnterSyncMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerEnterSyncMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerEnterSyncMessage(const PlayerEnterSyncMessage& from) : PlayerEnterSyncMessage(nullptr, from) {}
  inline PlayerEnterSyncMessage(PlayerEnterSyncMessage&& from) noexcept
      : PlayerEnterSyncMessage(nullptr, std::move(from)) {}
  inline PlayerEnterSyncMessage& operator=(const PlayerEnterSyncMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerEnterSyncMessage& operator=(PlayerEnterSyncMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerEnterSyncMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerEnterSyncMessage* internal_default_instance() {
    return reinterpret_cast<const PlayerEnterSyncMessage*>(
        &_PlayerEnterSyncMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(PlayerEnterSyncMessage& a, PlayerEnterSyncMessage& b) { a.Swap(&b); }
  inline void Swap(PlayerEnterSyncMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerEnterSyncMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerEnterSyncMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerEnterSyncMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerEnterSyncMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerEnterSyncMessage& from) { PlayerEnterSyncMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerEnterSyncMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PlayerEnterSyncMessage"; }

 protected:
  explicit PlayerEnterSyncMessage(::google::protobuf::Arena* arena);
  PlayerEnterSyncMessage(::google::protobuf::Arena* arena, const PlayerEnterSyncMessage& from);
  PlayerEnterSyncMessage(::google::protobuf::Arena* arena, PlayerEnterSyncMessage&& from) noexcept
      : PlayerEnterSyncMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUidFieldNumber = 1,
    kSelfFieldNumber = 2,
  };
  // uint32 uid = 1;
  void clear_uid() ;
  ::uint32_t uid() const;
  void set_uid(::uint32_t value);

  private:
  ::uint32_t _internal_uid() const;
  void _internal_set_uid(::uint32_t value);

  public:
  // bool self = 2;
  void clear_self() ;
  bool self() const;
  void set_self(bool value);

  private:
  bool _internal_self() const;
  void _internal_set_self(bool value);

  public:
  // @@protoc_insertion_point(class_scope:PlayerEnterSyncMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerEnterSyncMessage& from_msg);
    ::uint32_t uid_;
    bool self_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class PlayerAttackSyncMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayerAttackSyncMessage) */ {
 public:
  inline PlayerAttackSyncMessage() : PlayerAttackSyncMessage(nullptr) {}
  ~PlayerAttackSyncMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerAttackSyncMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerAttackSyncMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerAttackSyncMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerAttackSyncMessage(const PlayerAttackSyncMessage& from) : PlayerAttackSyncMessage(nullptr, from) {}
  inline PlayerAttackSyncMessage(PlayerAttackSyncMessage&& from) noexcept
      : PlayerAttackSyncMessage(nullptr, std::move(from)) {}
  inline PlayerAttackSyncMessage& operator=(const PlayerAttackSyncMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerAttackSyncMessage& operator=(PlayerAttackSyncMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerAttackSyncMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerAttackSyncMessage* internal_default_instance() {
    return reinterpret_cast<const PlayerAttackSyncMessage*>(
        &_PlayerAttackSyncMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(PlayerAttackSyncMessage& a, PlayerAttackSyncMessage& b) { a.Swap(&b); }
  inline void Swap(PlayerAttackSyncMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerAttackSyncMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerAttackSyncMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerAttackSyncMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerAttackSyncMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerAttackSyncMessage& from) { PlayerAttackSyncMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerAttackSyncMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PlayerAttackSyncMessage"; }

 protected:
  explicit PlayerAttackSyncMessage(::google::protobuf::Arena* arena);
  PlayerAttackSyncMessage(::google::protobuf::Arena* arena, const PlayerAttackSyncMessage& from);
  PlayerAttackSyncMessage(::google::protobuf::Arena* arena, PlayerAttackSyncMessage&& from) noexcept
      : PlayerAttackSyncMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFromFieldNumber = 1,
    kToFieldNumber = 2,
    kCoolDownFieldNumber = 3,
  };
  // uint32 from = 1;
  void clear_from() ;
  ::uint32_t from() const;
  void set_from(::uint32_t value);

  private:
  ::uint32_t _internal_from() const;
  void _internal_set_from(::uint32_t value);

  public:
  // uint32 to = 2;
  void clear_to() ;
  ::uint32_t to() const;
  void set_to(::uint32_t value);

  private:
  ::uint32_t _internal_to() const;
  void _internal_set_to(::uint32_t value);

  public:
  // float cool_down = 3;
  void clear_cool_down() ;
  float cool_down() const;
  void set_cool_down(float value);

  private:
  float _internal_cool_down() const;
  void _internal_set_cool_down(float value);

  public:
  // @@protoc_insertion_point(class_scope:PlayerAttackSyncMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerAttackSyncMessage& from_msg);
    ::uint32_t from_;
    ::uint32_t to_;
    float cool_down_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class PlayerAttackSpeedSyncMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayerAttackSpeedSyncMessage) */ {
 public:
  inline PlayerAttackSpeedSyncMessage() : PlayerAttackSpeedSyncMessage(nullptr) {}
  ~PlayerAttackSpeedSyncMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerAttackSpeedSyncMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerAttackSpeedSyncMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerAttackSpeedSyncMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerAttackSpeedSyncMessage(const PlayerAttackSpeedSyncMessage& from) : PlayerAttackSpeedSyncMessage(nullptr, from) {}
  inline PlayerAttackSpeedSyncMessage(PlayerAttackSpeedSyncMessage&& from) noexcept
      : PlayerAttackSpeedSyncMessage(nullptr, std::move(from)) {}
  inline PlayerAttackSpeedSyncMessage& operator=(const PlayerAttackSpeedSyncMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerAttackSpeedSyncMessage& operator=(PlayerAttackSpeedSyncMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerAttackSpeedSyncMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerAttackSpeedSyncMessage* internal_default_instance() {
    return reinterpret_cast<const PlayerAttackSpeedSyncMessage*>(
        &_PlayerAttackSpeedSyncMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(PlayerAttackSpeedSyncMessage& a, PlayerAttackSpeedSyncMessage& b) { a.Swap(&b); }
  inline void Swap(PlayerAttackSpeedSyncMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerAttackSpeedSyncMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerAttackSpeedSyncMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerAttackSpeedSyncMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerAttackSpeedSyncMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerAttackSpeedSyncMessage& from) { PlayerAttackSpeedSyncMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerAttackSpeedSyncMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PlayerAttackSpeedSyncMessage"; }

 protected:
  explicit PlayerAttackSpeedSyncMessage(::google::protobuf::Arena* arena);
  PlayerAttackSpeedSyncMessage(::google::protobuf::Arena* arena, const PlayerAttackSpeedSyncMessage& from);
  PlayerAttackSpeedSyncMessage(::google::protobuf::Arena* arena, PlayerAttackSpeedSyncMessage&& from) noexcept
      : PlayerAttackSpeedSyncMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUidFieldNumber = 1,
    kSpeedFieldNumber = 2,
  };
  // uint32 uid = 1;
  void clear_uid() ;
  ::uint32_t uid() const;
  void set_uid(::uint32_t value);

  private:
  ::uint32_t _internal_uid() const;
  void _internal_set_uid(::uint32_t value);

  public:
  // float speed = 2;
  void clear_speed() ;
  float speed() const;
  void set_speed(float value);

  private:
  float _internal_speed() const;
  void _internal_set_speed(float value);

  public:
  // @@protoc_insertion_point(class_scope:PlayerAttackSpeedSyncMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerAttackSpeedSyncMessage& from_msg);
    ::uint32_t uid_;
    float speed_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class PlayerAttackMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:PlayerAttackMessage) */ {
 public:
  inline PlayerAttackMessage() : PlayerAttackMessage(nullptr) {}
  ~PlayerAttackMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(PlayerAttackMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(PlayerAttackMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PlayerAttackMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline PlayerAttackMessage(const PlayerAttackMessage& from) : PlayerAttackMessage(nullptr, from) {}
  inline PlayerAttackMessage(PlayerAttackMessage&& from) noexcept
      : PlayerAttackMessage(nullptr, std::move(from)) {}
  inline PlayerAttackMessage& operator=(const PlayerAttackMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerAttackMessage& operator=(PlayerAttackMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PlayerAttackMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const PlayerAttackMessage* internal_default_instance() {
    return reinterpret_cast<const PlayerAttackMessage*>(
        &_PlayerAttackMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(PlayerAttackMessage& a, PlayerAttackMessage& b) { a.Swap(&b); }
  inline void Swap(PlayerAttackMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PlayerAttackMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PlayerAttackMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<PlayerAttackMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PlayerAttackMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PlayerAttackMessage& from) { PlayerAttackMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(PlayerAttackMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "PlayerAttackMessage"; }

 protected:
  explicit PlayerAttackMessage(::google::protobuf::Arena* arena);
  PlayerAttackMessage(::google::protobuf::Arena* arena, const PlayerAttackMessage& from);
  PlayerAttackMessage(::google::protobuf::Arena* arena, PlayerAttackMessage&& from) noexcept
      : PlayerAttackMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUidFieldNumber = 1,
  };
  // uint32 uid = 1;
  void clear_uid() ;
  ::uint32_t uid() const;
  void set_uid(::uint32_t value);

  private:
  ::uint32_t _internal_uid() const;
  void _internal_set_uid(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:PlayerAttackMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PlayerAttackMessage& from_msg);
    ::uint32_t uid_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class MoveMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MoveMessage) */ {
 public:
  inline MoveMessage() : MoveMessage(nullptr) {}
  ~MoveMessage() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MoveMessage* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MoveMessage));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MoveMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline MoveMessage(const MoveMessage& from) : MoveMessage(nullptr, from) {}
  inline MoveMessage(MoveMessage&& from) noexcept
      : MoveMessage(nullptr, std::move(from)) {}
  inline MoveMessage& operator=(const MoveMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline MoveMessage& operator=(MoveMessage&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MoveMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const MoveMessage* internal_default_instance() {
    return reinterpret_cast<const MoveMessage*>(
        &_MoveMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MoveMessage& a, MoveMessage& b) { a.Swap(&b); }
  inline void Swap(MoveMessage* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MoveMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MoveMessage* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MoveMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MoveMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MoveMessage& from) { MoveMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MoveMessage* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "MoveMessage"; }

 protected:
  explicit MoveMessage(::google::protobuf::Arena* arena);
  MoveMessage(::google::protobuf::Arena* arena, const MoveMessage& from);
  MoveMessage(::google::protobuf::Arena* arena, MoveMessage&& from) noexcept
      : MoveMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // float x = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:MoveMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MoveMessage& from_msg);
    float x_;
    float y_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class InputPacket final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:InputPacket) */ {
 public:
  inline InputPacket() : InputPacket(nullptr) {}
  ~InputPacket() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(InputPacket* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(InputPacket));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InputPacket(
      ::google::protobuf::internal::ConstantInitialized);

  inline InputPacket(const InputPacket& from) : InputPacket(nullptr, from) {}
  inline InputPacket(InputPacket&& from) noexcept
      : InputPacket(nullptr, std::move(from)) {}
  inline InputPacket& operator=(const InputPacket& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputPacket& operator=(InputPacket&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InputPacket& default_instance() {
    return *internal_default_instance();
  }
  enum InputCase {
    kMove = 1,
    kPlayerAttack = 2,
    INPUT_NOT_SET = 0,
  };
  static inline const InputPacket* internal_default_instance() {
    return reinterpret_cast<const InputPacket*>(
        &_InputPacket_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(InputPacket& a, InputPacket& b) { a.Swap(&b); }
  inline void Swap(InputPacket* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InputPacket* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InputPacket* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<InputPacket>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InputPacket& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InputPacket& from) { InputPacket::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(InputPacket* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "InputPacket"; }

 protected:
  explicit InputPacket(::google::protobuf::Arena* arena);
  InputPacket(::google::protobuf::Arena* arena, const InputPacket& from);
  InputPacket(::google::protobuf::Arena* arena, InputPacket&& from) noexcept
      : InputPacket(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMoveFieldNumber = 1,
    kPlayerAttackFieldNumber = 2,
  };
  // .MoveMessage move = 1;
  bool has_move() const;
  private:
  bool _internal_has_move() const;

  public:
  void clear_move() ;
  const ::MoveMessage& move() const;
  PROTOBUF_NODISCARD ::MoveMessage* release_move();
  ::MoveMessage* mutable_move();
  void set_allocated_move(::MoveMessage* value);
  void unsafe_arena_set_allocated_move(::MoveMessage* value);
  ::MoveMessage* unsafe_arena_release_move();

  private:
  const ::MoveMessage& _internal_move() const;
  ::MoveMessage* _internal_mutable_move();

  public:
  // .PlayerAttackMessage player_attack = 2;
  bool has_player_attack() const;
  private:
  bool _internal_has_player_attack() const;

  public:
  void clear_player_attack() ;
  const ::PlayerAttackMessage& player_attack() const;
  PROTOBUF_NODISCARD ::PlayerAttackMessage* release_player_attack();
  ::PlayerAttackMessage* mutable_player_attack();
  void set_allocated_player_attack(::PlayerAttackMessage* value);
  void unsafe_arena_set_allocated_player_attack(::PlayerAttackMessage* value);
  ::PlayerAttackMessage* unsafe_arena_release_player_attack();

  private:
  const ::PlayerAttackMessage& _internal_player_attack() const;
  ::PlayerAttackMessage* _internal_mutable_player_attack();

  public:
  void clear_input();
  InputCase input_case() const;
  // @@protoc_insertion_point(class_scope:InputPacket)
 private:
  class _Internal;
  void set_has_move();
  void set_has_player_attack();
  inline bool has_input() const;
  inline void clear_has_input();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InputPacket& from_msg);
    union InputUnion {
      constexpr InputUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::MoveMessage* move_;
      ::PlayerAttackMessage* player_attack_;
    } input_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};
// -------------------------------------------------------------------

class Packet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:Packet) */ {
 public:
  inline Packet() : Packet(nullptr) {}
  ~Packet() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Packet* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Packet));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Packet(
      ::google::protobuf::internal::ConstantInitialized);

  inline Packet(const Packet& from) : Packet(nullptr, from) {}
  inline Packet(Packet&& from) noexcept
      : Packet(nullptr, std::move(from)) {}
  inline Packet& operator=(const Packet& from) {
    CopyFrom(from);
    return *this;
  }
  inline Packet& operator=(Packet&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Packet& default_instance() {
    return *internal_default_instance();
  }
  enum MsgCase {
    kInput = 2,
    kPlayerPositionSync = 3,
    kPlayerEnterSync = 4,
    kPlayerExitSync = 5,
    kPlayerHealthSync = 6,
    kPlayerAttackSync = 7,
    kPlayerManaSync = 8,
    kPlayerAttackSpeedSync = 9,
    MSG_NOT_SET = 0,
  };
  static inline const Packet* internal_default_instance() {
    return reinterpret_cast<const Packet*>(
        &_Packet_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Packet& a, Packet& b) { a.Swap(&b); }
  inline void Swap(Packet* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Packet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Packet* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Packet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Packet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Packet& from) { Packet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Packet* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "Packet"; }

 protected:
  explicit Packet(::google::protobuf::Arena* arena);
  Packet(::google::protobuf::Arena* arena, const Packet& from);
  Packet(::google::protobuf::Arena* arena, Packet&& from) noexcept
      : Packet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUidFieldNumber = 1,
    kInputFieldNumber = 2,
    kPlayerPositionSyncFieldNumber = 3,
    kPlayerEnterSyncFieldNumber = 4,
    kPlayerExitSyncFieldNumber = 5,
    kPlayerHealthSyncFieldNumber = 6,
    kPlayerAttackSyncFieldNumber = 7,
    kPlayerManaSyncFieldNumber = 8,
    kPlayerAttackSpeedSyncFieldNumber = 9,
  };
  // uint32 uid = 1;
  void clear_uid() ;
  ::uint32_t uid() const;
  void set_uid(::uint32_t value);

  private:
  ::uint32_t _internal_uid() const;
  void _internal_set_uid(::uint32_t value);

  public:
  // .InputPacket input = 2;
  bool has_input() const;
  private:
  bool _internal_has_input() const;

  public:
  void clear_input() ;
  const ::InputPacket& input() const;
  PROTOBUF_NODISCARD ::InputPacket* release_input();
  ::InputPacket* mutable_input();
  void set_allocated_input(::InputPacket* value);
  void unsafe_arena_set_allocated_input(::InputPacket* value);
  ::InputPacket* unsafe_arena_release_input();

  private:
  const ::InputPacket& _internal_input() const;
  ::InputPacket* _internal_mutable_input();

  public:
  // .PlayerPositionSyncMessage player_position_sync = 3;
  bool has_player_position_sync() const;
  private:
  bool _internal_has_player_position_sync() const;

  public:
  void clear_player_position_sync() ;
  const ::PlayerPositionSyncMessage& player_position_sync() const;
  PROTOBUF_NODISCARD ::PlayerPositionSyncMessage* release_player_position_sync();
  ::PlayerPositionSyncMessage* mutable_player_position_sync();
  void set_allocated_player_position_sync(::PlayerPositionSyncMessage* value);
  void unsafe_arena_set_allocated_player_position_sync(::PlayerPositionSyncMessage* value);
  ::PlayerPositionSyncMessage* unsafe_arena_release_player_position_sync();

  private:
  const ::PlayerPositionSyncMessage& _internal_player_position_sync() const;
  ::PlayerPositionSyncMessage* _internal_mutable_player_position_sync();

  public:
  // .PlayerEnterSyncMessage player_enter_sync = 4;
  bool has_player_enter_sync() const;
  private:
  bool _internal_has_player_enter_sync() const;

  public:
  void clear_player_enter_sync() ;
  const ::PlayerEnterSyncMessage& player_enter_sync() const;
  PROTOBUF_NODISCARD ::PlayerEnterSyncMessage* release_player_enter_sync();
  ::PlayerEnterSyncMessage* mutable_player_enter_sync();
  void set_allocated_player_enter_sync(::PlayerEnterSyncMessage* value);
  void unsafe_arena_set_allocated_player_enter_sync(::PlayerEnterSyncMessage* value);
  ::PlayerEnterSyncMessage* unsafe_arena_release_player_enter_sync();

  private:
  const ::PlayerEnterSyncMessage& _internal_player_enter_sync() const;
  ::PlayerEnterSyncMessage* _internal_mutable_player_enter_sync();

  public:
  // .PlayerExitSyncMessage player_exit_sync = 5;
  bool has_player_exit_sync() const;
  private:
  bool _internal_has_player_exit_sync() const;

  public:
  void clear_player_exit_sync() ;
  const ::PlayerExitSyncMessage& player_exit_sync() const;
  PROTOBUF_NODISCARD ::PlayerExitSyncMessage* release_player_exit_sync();
  ::PlayerExitSyncMessage* mutable_player_exit_sync();
  void set_allocated_player_exit_sync(::PlayerExitSyncMessage* value);
  void unsafe_arena_set_allocated_player_exit_sync(::PlayerExitSyncMessage* value);
  ::PlayerExitSyncMessage* unsafe_arena_release_player_exit_sync();

  private:
  const ::PlayerExitSyncMessage& _internal_player_exit_sync() const;
  ::PlayerExitSyncMessage* _internal_mutable_player_exit_sync();

  public:
  // .PlayerHealthSyncMessage player_health_sync = 6;
  bool has_player_health_sync() const;
  private:
  bool _internal_has_player_health_sync() const;

  public:
  void clear_player_health_sync() ;
  const ::PlayerHealthSyncMessage& player_health_sync() const;
  PROTOBUF_NODISCARD ::PlayerHealthSyncMessage* release_player_health_sync();
  ::PlayerHealthSyncMessage* mutable_player_health_sync();
  void set_allocated_player_health_sync(::PlayerHealthSyncMessage* value);
  void unsafe_arena_set_allocated_player_health_sync(::PlayerHealthSyncMessage* value);
  ::PlayerHealthSyncMessage* unsafe_arena_release_player_health_sync();

  private:
  const ::PlayerHealthSyncMessage& _internal_player_health_sync() const;
  ::PlayerHealthSyncMessage* _internal_mutable_player_health_sync();

  public:
  // .PlayerAttackSyncMessage player_attack_sync = 7;
  bool has_player_attack_sync() const;
  private:
  bool _internal_has_player_attack_sync() const;

  public:
  void clear_player_attack_sync() ;
  const ::PlayerAttackSyncMessage& player_attack_sync() const;
  PROTOBUF_NODISCARD ::PlayerAttackSyncMessage* release_player_attack_sync();
  ::PlayerAttackSyncMessage* mutable_player_attack_sync();
  void set_allocated_player_attack_sync(::PlayerAttackSyncMessage* value);
  void unsafe_arena_set_allocated_player_attack_sync(::PlayerAttackSyncMessage* value);
  ::PlayerAttackSyncMessage* unsafe_arena_release_player_attack_sync();

  private:
  const ::PlayerAttackSyncMessage& _internal_player_attack_sync() const;
  ::PlayerAttackSyncMessage* _internal_mutable_player_attack_sync();

  public:
  // .PlayerManaSyncMessage player_mana_sync = 8;
  bool has_player_mana_sync() const;
  private:
  bool _internal_has_player_mana_sync() const;

  public:
  void clear_player_mana_sync() ;
  const ::PlayerManaSyncMessage& player_mana_sync() const;
  PROTOBUF_NODISCARD ::PlayerManaSyncMessage* release_player_mana_sync();
  ::PlayerManaSyncMessage* mutable_player_mana_sync();
  void set_allocated_player_mana_sync(::PlayerManaSyncMessage* value);
  void unsafe_arena_set_allocated_player_mana_sync(::PlayerManaSyncMessage* value);
  ::PlayerManaSyncMessage* unsafe_arena_release_player_mana_sync();

  private:
  const ::PlayerManaSyncMessage& _internal_player_mana_sync() const;
  ::PlayerManaSyncMessage* _internal_mutable_player_mana_sync();

  public:
  // .PlayerAttackSpeedSyncMessage player_attack_speed_sync = 9;
  bool has_player_attack_speed_sync() const;
  private:
  bool _internal_has_player_attack_speed_sync() const;

  public:
  void clear_player_attack_speed_sync() ;
  const ::PlayerAttackSpeedSyncMessage& player_attack_speed_sync() const;
  PROTOBUF_NODISCARD ::PlayerAttackSpeedSyncMessage* release_player_attack_speed_sync();
  ::PlayerAttackSpeedSyncMessage* mutable_player_attack_speed_sync();
  void set_allocated_player_attack_speed_sync(::PlayerAttackSpeedSyncMessage* value);
  void unsafe_arena_set_allocated_player_attack_speed_sync(::PlayerAttackSpeedSyncMessage* value);
  ::PlayerAttackSpeedSyncMessage* unsafe_arena_release_player_attack_speed_sync();

  private:
  const ::PlayerAttackSpeedSyncMessage& _internal_player_attack_speed_sync() const;
  ::PlayerAttackSpeedSyncMessage* _internal_mutable_player_attack_speed_sync();

  public:
  void clear_msg();
  MsgCase msg_case() const;
  // @@protoc_insertion_point(class_scope:Packet)
 private:
  class _Internal;
  void set_has_input();
  void set_has_player_position_sync();
  void set_has_player_enter_sync();
  void set_has_player_exit_sync();
  void set_has_player_health_sync();
  void set_has_player_attack_sync();
  void set_has_player_mana_sync();
  void set_has_player_attack_speed_sync();
  inline bool has_msg() const;
  inline void clear_has_msg();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 9, 8,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Packet& from_msg);
    ::uint32_t uid_;
    union MsgUnion {
      constexpr MsgUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::InputPacket* input_;
      ::PlayerPositionSyncMessage* player_position_sync_;
      ::PlayerEnterSyncMessage* player_enter_sync_;
      ::PlayerExitSyncMessage* player_exit_sync_;
      ::PlayerHealthSyncMessage* player_health_sync_;
      ::PlayerAttackSyncMessage* player_attack_sync_;
      ::PlayerManaSyncMessage* player_mana_sync_;
      ::PlayerAttackSpeedSyncMessage* player_attack_speed_sync_;
    } msg_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_test_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Packet

// uint32 uid = 1;
inline void Packet::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = 0u;
}
inline ::uint32_t Packet::uid() const {
  // @@protoc_insertion_point(field_get:Packet.uid)
  return _internal_uid();
}
inline void Packet::set_uid(::uint32_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:Packet.uid)
}
inline ::uint32_t Packet::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_;
}
inline void Packet::_internal_set_uid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = value;
}

// .InputPacket input = 2;
inline bool Packet::has_input() const {
  return msg_case() == kInput;
}
inline bool Packet::_internal_has_input() const {
  return msg_case() == kInput;
}
inline void Packet::set_has_input() {
  _impl_._oneof_case_[0] = kInput;
}
inline void Packet::clear_input() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kInput) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.input_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.input_);
    }
    clear_has_msg();
  }
}
inline ::InputPacket* Packet::release_input() {
  // @@protoc_insertion_point(field_release:Packet.input)
  if (msg_case() == kInput) {
    clear_has_msg();
    auto* temp = _impl_.msg_.input_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.input_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::InputPacket& Packet::_internal_input() const {
  return msg_case() == kInput ? *_impl_.msg_.input_ : reinterpret_cast<::InputPacket&>(::_InputPacket_default_instance_);
}
inline const ::InputPacket& Packet::input() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Packet.input)
  return _internal_input();
}
inline ::InputPacket* Packet::unsafe_arena_release_input() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Packet.input)
  if (msg_case() == kInput) {
    clear_has_msg();
    auto* temp = _impl_.msg_.input_;
    _impl_.msg_.input_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Packet::unsafe_arena_set_allocated_input(::InputPacket* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_input();
    _impl_.msg_.input_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Packet.input)
}
inline ::InputPacket* Packet::_internal_mutable_input() {
  if (msg_case() != kInput) {
    clear_msg();
    set_has_input();
    _impl_.msg_.input_ =
        ::google::protobuf::Message::DefaultConstruct<::InputPacket>(GetArena());
  }
  return _impl_.msg_.input_;
}
inline ::InputPacket* Packet::mutable_input() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::InputPacket* _msg = _internal_mutable_input();
  // @@protoc_insertion_point(field_mutable:Packet.input)
  return _msg;
}

// .PlayerPositionSyncMessage player_position_sync = 3;
inline bool Packet::has_player_position_sync() const {
  return msg_case() == kPlayerPositionSync;
}
inline bool Packet::_internal_has_player_position_sync() const {
  return msg_case() == kPlayerPositionSync;
}
inline void Packet::set_has_player_position_sync() {
  _impl_._oneof_case_[0] = kPlayerPositionSync;
}
inline void Packet::clear_player_position_sync() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kPlayerPositionSync) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.player_position_sync_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.player_position_sync_);
    }
    clear_has_msg();
  }
}
inline ::PlayerPositionSyncMessage* Packet::release_player_position_sync() {
  // @@protoc_insertion_point(field_release:Packet.player_position_sync)
  if (msg_case() == kPlayerPositionSync) {
    clear_has_msg();
    auto* temp = _impl_.msg_.player_position_sync_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.player_position_sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::PlayerPositionSyncMessage& Packet::_internal_player_position_sync() const {
  return msg_case() == kPlayerPositionSync ? *_impl_.msg_.player_position_sync_ : reinterpret_cast<::PlayerPositionSyncMessage&>(::_PlayerPositionSyncMessage_default_instance_);
}
inline const ::PlayerPositionSyncMessage& Packet::player_position_sync() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Packet.player_position_sync)
  return _internal_player_position_sync();
}
inline ::PlayerPositionSyncMessage* Packet::unsafe_arena_release_player_position_sync() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Packet.player_position_sync)
  if (msg_case() == kPlayerPositionSync) {
    clear_has_msg();
    auto* temp = _impl_.msg_.player_position_sync_;
    _impl_.msg_.player_position_sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Packet::unsafe_arena_set_allocated_player_position_sync(::PlayerPositionSyncMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_player_position_sync();
    _impl_.msg_.player_position_sync_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Packet.player_position_sync)
}
inline ::PlayerPositionSyncMessage* Packet::_internal_mutable_player_position_sync() {
  if (msg_case() != kPlayerPositionSync) {
    clear_msg();
    set_has_player_position_sync();
    _impl_.msg_.player_position_sync_ =
        ::google::protobuf::Message::DefaultConstruct<::PlayerPositionSyncMessage>(GetArena());
  }
  return _impl_.msg_.player_position_sync_;
}
inline ::PlayerPositionSyncMessage* Packet::mutable_player_position_sync() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PlayerPositionSyncMessage* _msg = _internal_mutable_player_position_sync();
  // @@protoc_insertion_point(field_mutable:Packet.player_position_sync)
  return _msg;
}

// .PlayerEnterSyncMessage player_enter_sync = 4;
inline bool Packet::has_player_enter_sync() const {
  return msg_case() == kPlayerEnterSync;
}
inline bool Packet::_internal_has_player_enter_sync() const {
  return msg_case() == kPlayerEnterSync;
}
inline void Packet::set_has_player_enter_sync() {
  _impl_._oneof_case_[0] = kPlayerEnterSync;
}
inline void Packet::clear_player_enter_sync() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kPlayerEnterSync) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.player_enter_sync_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.player_enter_sync_);
    }
    clear_has_msg();
  }
}
inline ::PlayerEnterSyncMessage* Packet::release_player_enter_sync() {
  // @@protoc_insertion_point(field_release:Packet.player_enter_sync)
  if (msg_case() == kPlayerEnterSync) {
    clear_has_msg();
    auto* temp = _impl_.msg_.player_enter_sync_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.player_enter_sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::PlayerEnterSyncMessage& Packet::_internal_player_enter_sync() const {
  return msg_case() == kPlayerEnterSync ? *_impl_.msg_.player_enter_sync_ : reinterpret_cast<::PlayerEnterSyncMessage&>(::_PlayerEnterSyncMessage_default_instance_);
}
inline const ::PlayerEnterSyncMessage& Packet::player_enter_sync() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Packet.player_enter_sync)
  return _internal_player_enter_sync();
}
inline ::PlayerEnterSyncMessage* Packet::unsafe_arena_release_player_enter_sync() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Packet.player_enter_sync)
  if (msg_case() == kPlayerEnterSync) {
    clear_has_msg();
    auto* temp = _impl_.msg_.player_enter_sync_;
    _impl_.msg_.player_enter_sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Packet::unsafe_arena_set_allocated_player_enter_sync(::PlayerEnterSyncMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_player_enter_sync();
    _impl_.msg_.player_enter_sync_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Packet.player_enter_sync)
}
inline ::PlayerEnterSyncMessage* Packet::_internal_mutable_player_enter_sync() {
  if (msg_case() != kPlayerEnterSync) {
    clear_msg();
    set_has_player_enter_sync();
    _impl_.msg_.player_enter_sync_ =
        ::google::protobuf::Message::DefaultConstruct<::PlayerEnterSyncMessage>(GetArena());
  }
  return _impl_.msg_.player_enter_sync_;
}
inline ::PlayerEnterSyncMessage* Packet::mutable_player_enter_sync() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PlayerEnterSyncMessage* _msg = _internal_mutable_player_enter_sync();
  // @@protoc_insertion_point(field_mutable:Packet.player_enter_sync)
  return _msg;
}

// .PlayerExitSyncMessage player_exit_sync = 5;
inline bool Packet::has_player_exit_sync() const {
  return msg_case() == kPlayerExitSync;
}
inline bool Packet::_internal_has_player_exit_sync() const {
  return msg_case() == kPlayerExitSync;
}
inline void Packet::set_has_player_exit_sync() {
  _impl_._oneof_case_[0] = kPlayerExitSync;
}
inline void Packet::clear_player_exit_sync() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kPlayerExitSync) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.player_exit_sync_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.player_exit_sync_);
    }
    clear_has_msg();
  }
}
inline ::PlayerExitSyncMessage* Packet::release_player_exit_sync() {
  // @@protoc_insertion_point(field_release:Packet.player_exit_sync)
  if (msg_case() == kPlayerExitSync) {
    clear_has_msg();
    auto* temp = _impl_.msg_.player_exit_sync_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.player_exit_sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::PlayerExitSyncMessage& Packet::_internal_player_exit_sync() const {
  return msg_case() == kPlayerExitSync ? *_impl_.msg_.player_exit_sync_ : reinterpret_cast<::PlayerExitSyncMessage&>(::_PlayerExitSyncMessage_default_instance_);
}
inline const ::PlayerExitSyncMessage& Packet::player_exit_sync() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Packet.player_exit_sync)
  return _internal_player_exit_sync();
}
inline ::PlayerExitSyncMessage* Packet::unsafe_arena_release_player_exit_sync() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Packet.player_exit_sync)
  if (msg_case() == kPlayerExitSync) {
    clear_has_msg();
    auto* temp = _impl_.msg_.player_exit_sync_;
    _impl_.msg_.player_exit_sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Packet::unsafe_arena_set_allocated_player_exit_sync(::PlayerExitSyncMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_player_exit_sync();
    _impl_.msg_.player_exit_sync_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Packet.player_exit_sync)
}
inline ::PlayerExitSyncMessage* Packet::_internal_mutable_player_exit_sync() {
  if (msg_case() != kPlayerExitSync) {
    clear_msg();
    set_has_player_exit_sync();
    _impl_.msg_.player_exit_sync_ =
        ::google::protobuf::Message::DefaultConstruct<::PlayerExitSyncMessage>(GetArena());
  }
  return _impl_.msg_.player_exit_sync_;
}
inline ::PlayerExitSyncMessage* Packet::mutable_player_exit_sync() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PlayerExitSyncMessage* _msg = _internal_mutable_player_exit_sync();
  // @@protoc_insertion_point(field_mutable:Packet.player_exit_sync)
  return _msg;
}

// .PlayerHealthSyncMessage player_health_sync = 6;
inline bool Packet::has_player_health_sync() const {
  return msg_case() == kPlayerHealthSync;
}
inline bool Packet::_internal_has_player_health_sync() const {
  return msg_case() == kPlayerHealthSync;
}
inline void Packet::set_has_player_health_sync() {
  _impl_._oneof_case_[0] = kPlayerHealthSync;
}
inline void Packet::clear_player_health_sync() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kPlayerHealthSync) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.player_health_sync_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.player_health_sync_);
    }
    clear_has_msg();
  }
}
inline ::PlayerHealthSyncMessage* Packet::release_player_health_sync() {
  // @@protoc_insertion_point(field_release:Packet.player_health_sync)
  if (msg_case() == kPlayerHealthSync) {
    clear_has_msg();
    auto* temp = _impl_.msg_.player_health_sync_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.player_health_sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::PlayerHealthSyncMessage& Packet::_internal_player_health_sync() const {
  return msg_case() == kPlayerHealthSync ? *_impl_.msg_.player_health_sync_ : reinterpret_cast<::PlayerHealthSyncMessage&>(::_PlayerHealthSyncMessage_default_instance_);
}
inline const ::PlayerHealthSyncMessage& Packet::player_health_sync() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Packet.player_health_sync)
  return _internal_player_health_sync();
}
inline ::PlayerHealthSyncMessage* Packet::unsafe_arena_release_player_health_sync() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Packet.player_health_sync)
  if (msg_case() == kPlayerHealthSync) {
    clear_has_msg();
    auto* temp = _impl_.msg_.player_health_sync_;
    _impl_.msg_.player_health_sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Packet::unsafe_arena_set_allocated_player_health_sync(::PlayerHealthSyncMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_player_health_sync();
    _impl_.msg_.player_health_sync_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Packet.player_health_sync)
}
inline ::PlayerHealthSyncMessage* Packet::_internal_mutable_player_health_sync() {
  if (msg_case() != kPlayerHealthSync) {
    clear_msg();
    set_has_player_health_sync();
    _impl_.msg_.player_health_sync_ =
        ::google::protobuf::Message::DefaultConstruct<::PlayerHealthSyncMessage>(GetArena());
  }
  return _impl_.msg_.player_health_sync_;
}
inline ::PlayerHealthSyncMessage* Packet::mutable_player_health_sync() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PlayerHealthSyncMessage* _msg = _internal_mutable_player_health_sync();
  // @@protoc_insertion_point(field_mutable:Packet.player_health_sync)
  return _msg;
}

// .PlayerAttackSyncMessage player_attack_sync = 7;
inline bool Packet::has_player_attack_sync() const {
  return msg_case() == kPlayerAttackSync;
}
inline bool Packet::_internal_has_player_attack_sync() const {
  return msg_case() == kPlayerAttackSync;
}
inline void Packet::set_has_player_attack_sync() {
  _impl_._oneof_case_[0] = kPlayerAttackSync;
}
inline void Packet::clear_player_attack_sync() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kPlayerAttackSync) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.player_attack_sync_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.player_attack_sync_);
    }
    clear_has_msg();
  }
}
inline ::PlayerAttackSyncMessage* Packet::release_player_attack_sync() {
  // @@protoc_insertion_point(field_release:Packet.player_attack_sync)
  if (msg_case() == kPlayerAttackSync) {
    clear_has_msg();
    auto* temp = _impl_.msg_.player_attack_sync_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.player_attack_sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::PlayerAttackSyncMessage& Packet::_internal_player_attack_sync() const {
  return msg_case() == kPlayerAttackSync ? *_impl_.msg_.player_attack_sync_ : reinterpret_cast<::PlayerAttackSyncMessage&>(::_PlayerAttackSyncMessage_default_instance_);
}
inline const ::PlayerAttackSyncMessage& Packet::player_attack_sync() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Packet.player_attack_sync)
  return _internal_player_attack_sync();
}
inline ::PlayerAttackSyncMessage* Packet::unsafe_arena_release_player_attack_sync() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Packet.player_attack_sync)
  if (msg_case() == kPlayerAttackSync) {
    clear_has_msg();
    auto* temp = _impl_.msg_.player_attack_sync_;
    _impl_.msg_.player_attack_sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Packet::unsafe_arena_set_allocated_player_attack_sync(::PlayerAttackSyncMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_player_attack_sync();
    _impl_.msg_.player_attack_sync_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Packet.player_attack_sync)
}
inline ::PlayerAttackSyncMessage* Packet::_internal_mutable_player_attack_sync() {
  if (msg_case() != kPlayerAttackSync) {
    clear_msg();
    set_has_player_attack_sync();
    _impl_.msg_.player_attack_sync_ =
        ::google::protobuf::Message::DefaultConstruct<::PlayerAttackSyncMessage>(GetArena());
  }
  return _impl_.msg_.player_attack_sync_;
}
inline ::PlayerAttackSyncMessage* Packet::mutable_player_attack_sync() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PlayerAttackSyncMessage* _msg = _internal_mutable_player_attack_sync();
  // @@protoc_insertion_point(field_mutable:Packet.player_attack_sync)
  return _msg;
}

// .PlayerManaSyncMessage player_mana_sync = 8;
inline bool Packet::has_player_mana_sync() const {
  return msg_case() == kPlayerManaSync;
}
inline bool Packet::_internal_has_player_mana_sync() const {
  return msg_case() == kPlayerManaSync;
}
inline void Packet::set_has_player_mana_sync() {
  _impl_._oneof_case_[0] = kPlayerManaSync;
}
inline void Packet::clear_player_mana_sync() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kPlayerManaSync) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.player_mana_sync_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.player_mana_sync_);
    }
    clear_has_msg();
  }
}
inline ::PlayerManaSyncMessage* Packet::release_player_mana_sync() {
  // @@protoc_insertion_point(field_release:Packet.player_mana_sync)
  if (msg_case() == kPlayerManaSync) {
    clear_has_msg();
    auto* temp = _impl_.msg_.player_mana_sync_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.player_mana_sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::PlayerManaSyncMessage& Packet::_internal_player_mana_sync() const {
  return msg_case() == kPlayerManaSync ? *_impl_.msg_.player_mana_sync_ : reinterpret_cast<::PlayerManaSyncMessage&>(::_PlayerManaSyncMessage_default_instance_);
}
inline const ::PlayerManaSyncMessage& Packet::player_mana_sync() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Packet.player_mana_sync)
  return _internal_player_mana_sync();
}
inline ::PlayerManaSyncMessage* Packet::unsafe_arena_release_player_mana_sync() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Packet.player_mana_sync)
  if (msg_case() == kPlayerManaSync) {
    clear_has_msg();
    auto* temp = _impl_.msg_.player_mana_sync_;
    _impl_.msg_.player_mana_sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Packet::unsafe_arena_set_allocated_player_mana_sync(::PlayerManaSyncMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_player_mana_sync();
    _impl_.msg_.player_mana_sync_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Packet.player_mana_sync)
}
inline ::PlayerManaSyncMessage* Packet::_internal_mutable_player_mana_sync() {
  if (msg_case() != kPlayerManaSync) {
    clear_msg();
    set_has_player_mana_sync();
    _impl_.msg_.player_mana_sync_ =
        ::google::protobuf::Message::DefaultConstruct<::PlayerManaSyncMessage>(GetArena());
  }
  return _impl_.msg_.player_mana_sync_;
}
inline ::PlayerManaSyncMessage* Packet::mutable_player_mana_sync() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PlayerManaSyncMessage* _msg = _internal_mutable_player_mana_sync();
  // @@protoc_insertion_point(field_mutable:Packet.player_mana_sync)
  return _msg;
}

// .PlayerAttackSpeedSyncMessage player_attack_speed_sync = 9;
inline bool Packet::has_player_attack_speed_sync() const {
  return msg_case() == kPlayerAttackSpeedSync;
}
inline bool Packet::_internal_has_player_attack_speed_sync() const {
  return msg_case() == kPlayerAttackSpeedSync;
}
inline void Packet::set_has_player_attack_speed_sync() {
  _impl_._oneof_case_[0] = kPlayerAttackSpeedSync;
}
inline void Packet::clear_player_attack_speed_sync() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (msg_case() == kPlayerAttackSpeedSync) {
    if (GetArena() == nullptr) {
      delete _impl_.msg_.player_attack_speed_sync_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.msg_.player_attack_speed_sync_);
    }
    clear_has_msg();
  }
}
inline ::PlayerAttackSpeedSyncMessage* Packet::release_player_attack_speed_sync() {
  // @@protoc_insertion_point(field_release:Packet.player_attack_speed_sync)
  if (msg_case() == kPlayerAttackSpeedSync) {
    clear_has_msg();
    auto* temp = _impl_.msg_.player_attack_speed_sync_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.msg_.player_attack_speed_sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::PlayerAttackSpeedSyncMessage& Packet::_internal_player_attack_speed_sync() const {
  return msg_case() == kPlayerAttackSpeedSync ? *_impl_.msg_.player_attack_speed_sync_ : reinterpret_cast<::PlayerAttackSpeedSyncMessage&>(::_PlayerAttackSpeedSyncMessage_default_instance_);
}
inline const ::PlayerAttackSpeedSyncMessage& Packet::player_attack_speed_sync() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:Packet.player_attack_speed_sync)
  return _internal_player_attack_speed_sync();
}
inline ::PlayerAttackSpeedSyncMessage* Packet::unsafe_arena_release_player_attack_speed_sync() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Packet.player_attack_speed_sync)
  if (msg_case() == kPlayerAttackSpeedSync) {
    clear_has_msg();
    auto* temp = _impl_.msg_.player_attack_speed_sync_;
    _impl_.msg_.player_attack_speed_sync_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Packet::unsafe_arena_set_allocated_player_attack_speed_sync(::PlayerAttackSpeedSyncMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_msg();
  if (value) {
    set_has_player_attack_speed_sync();
    _impl_.msg_.player_attack_speed_sync_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Packet.player_attack_speed_sync)
}
inline ::PlayerAttackSpeedSyncMessage* Packet::_internal_mutable_player_attack_speed_sync() {
  if (msg_case() != kPlayerAttackSpeedSync) {
    clear_msg();
    set_has_player_attack_speed_sync();
    _impl_.msg_.player_attack_speed_sync_ =
        ::google::protobuf::Message::DefaultConstruct<::PlayerAttackSpeedSyncMessage>(GetArena());
  }
  return _impl_.msg_.player_attack_speed_sync_;
}
inline ::PlayerAttackSpeedSyncMessage* Packet::mutable_player_attack_speed_sync() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PlayerAttackSpeedSyncMessage* _msg = _internal_mutable_player_attack_speed_sync();
  // @@protoc_insertion_point(field_mutable:Packet.player_attack_speed_sync)
  return _msg;
}

inline bool Packet::has_msg() const {
  return msg_case() != MSG_NOT_SET;
}
inline void Packet::clear_has_msg() {
  _impl_._oneof_case_[0] = MSG_NOT_SET;
}
inline Packet::MsgCase Packet::msg_case() const {
  return Packet::MsgCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// InputPacket

// .MoveMessage move = 1;
inline bool InputPacket::has_move() const {
  return input_case() == kMove;
}
inline bool InputPacket::_internal_has_move() const {
  return input_case() == kMove;
}
inline void InputPacket::set_has_move() {
  _impl_._oneof_case_[0] = kMove;
}
inline void InputPacket::clear_move() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (input_case() == kMove) {
    if (GetArena() == nullptr) {
      delete _impl_.input_.move_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.input_.move_);
    }
    clear_has_input();
  }
}
inline ::MoveMessage* InputPacket::release_move() {
  // @@protoc_insertion_point(field_release:InputPacket.move)
  if (input_case() == kMove) {
    clear_has_input();
    auto* temp = _impl_.input_.move_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.input_.move_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::MoveMessage& InputPacket::_internal_move() const {
  return input_case() == kMove ? *_impl_.input_.move_ : reinterpret_cast<::MoveMessage&>(::_MoveMessage_default_instance_);
}
inline const ::MoveMessage& InputPacket::move() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:InputPacket.move)
  return _internal_move();
}
inline ::MoveMessage* InputPacket::unsafe_arena_release_move() {
  // @@protoc_insertion_point(field_unsafe_arena_release:InputPacket.move)
  if (input_case() == kMove) {
    clear_has_input();
    auto* temp = _impl_.input_.move_;
    _impl_.input_.move_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InputPacket::unsafe_arena_set_allocated_move(::MoveMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_input();
  if (value) {
    set_has_move();
    _impl_.input_.move_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:InputPacket.move)
}
inline ::MoveMessage* InputPacket::_internal_mutable_move() {
  if (input_case() != kMove) {
    clear_input();
    set_has_move();
    _impl_.input_.move_ =
        ::google::protobuf::Message::DefaultConstruct<::MoveMessage>(GetArena());
  }
  return _impl_.input_.move_;
}
inline ::MoveMessage* InputPacket::mutable_move() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::MoveMessage* _msg = _internal_mutable_move();
  // @@protoc_insertion_point(field_mutable:InputPacket.move)
  return _msg;
}

// .PlayerAttackMessage player_attack = 2;
inline bool InputPacket::has_player_attack() const {
  return input_case() == kPlayerAttack;
}
inline bool InputPacket::_internal_has_player_attack() const {
  return input_case() == kPlayerAttack;
}
inline void InputPacket::set_has_player_attack() {
  _impl_._oneof_case_[0] = kPlayerAttack;
}
inline void InputPacket::clear_player_attack() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (input_case() == kPlayerAttack) {
    if (GetArena() == nullptr) {
      delete _impl_.input_.player_attack_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.input_.player_attack_);
    }
    clear_has_input();
  }
}
inline ::PlayerAttackMessage* InputPacket::release_player_attack() {
  // @@protoc_insertion_point(field_release:InputPacket.player_attack)
  if (input_case() == kPlayerAttack) {
    clear_has_input();
    auto* temp = _impl_.input_.player_attack_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.input_.player_attack_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::PlayerAttackMessage& InputPacket::_internal_player_attack() const {
  return input_case() == kPlayerAttack ? *_impl_.input_.player_attack_ : reinterpret_cast<::PlayerAttackMessage&>(::_PlayerAttackMessage_default_instance_);
}
inline const ::PlayerAttackMessage& InputPacket::player_attack() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:InputPacket.player_attack)
  return _internal_player_attack();
}
inline ::PlayerAttackMessage* InputPacket::unsafe_arena_release_player_attack() {
  // @@protoc_insertion_point(field_unsafe_arena_release:InputPacket.player_attack)
  if (input_case() == kPlayerAttack) {
    clear_has_input();
    auto* temp = _impl_.input_.player_attack_;
    _impl_.input_.player_attack_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void InputPacket::unsafe_arena_set_allocated_player_attack(::PlayerAttackMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_input();
  if (value) {
    set_has_player_attack();
    _impl_.input_.player_attack_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:InputPacket.player_attack)
}
inline ::PlayerAttackMessage* InputPacket::_internal_mutable_player_attack() {
  if (input_case() != kPlayerAttack) {
    clear_input();
    set_has_player_attack();
    _impl_.input_.player_attack_ =
        ::google::protobuf::Message::DefaultConstruct<::PlayerAttackMessage>(GetArena());
  }
  return _impl_.input_.player_attack_;
}
inline ::PlayerAttackMessage* InputPacket::mutable_player_attack() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::PlayerAttackMessage* _msg = _internal_mutable_player_attack();
  // @@protoc_insertion_point(field_mutable:InputPacket.player_attack)
  return _msg;
}

inline bool InputPacket::has_input() const {
  return input_case() != INPUT_NOT_SET;
}
inline void InputPacket::clear_has_input() {
  _impl_._oneof_case_[0] = INPUT_NOT_SET;
}
inline InputPacket::InputCase InputPacket::input_case() const {
  return InputPacket::InputCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// MoveMessage

// float x = 1;
inline void MoveMessage::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline float MoveMessage::x() const {
  // @@protoc_insertion_point(field_get:MoveMessage.x)
  return _internal_x();
}
inline void MoveMessage::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:MoveMessage.x)
}
inline float MoveMessage::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void MoveMessage::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 2;
inline void MoveMessage::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline float MoveMessage::y() const {
  // @@protoc_insertion_point(field_get:MoveMessage.y)
  return _internal_y();
}
inline void MoveMessage::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:MoveMessage.y)
}
inline float MoveMessage::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void MoveMessage::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// PlayerAttackMessage

// uint32 uid = 1;
inline void PlayerAttackMessage::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = 0u;
}
inline ::uint32_t PlayerAttackMessage::uid() const {
  // @@protoc_insertion_point(field_get:PlayerAttackMessage.uid)
  return _internal_uid();
}
inline void PlayerAttackMessage::set_uid(::uint32_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:PlayerAttackMessage.uid)
}
inline ::uint32_t PlayerAttackMessage::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_;
}
inline void PlayerAttackMessage::_internal_set_uid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = value;
}

// -------------------------------------------------------------------

// PlayerUseSkillMessage

// uint32 skill_pos = 1;
inline void PlayerUseSkillMessage::clear_skill_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skill_pos_ = 0u;
}
inline ::uint32_t PlayerUseSkillMessage::skill_pos() const {
  // @@protoc_insertion_point(field_get:PlayerUseSkillMessage.skill_pos)
  return _internal_skill_pos();
}
inline void PlayerUseSkillMessage::set_skill_pos(::uint32_t value) {
  _internal_set_skill_pos(value);
  // @@protoc_insertion_point(field_set:PlayerUseSkillMessage.skill_pos)
}
inline ::uint32_t PlayerUseSkillMessage::_internal_skill_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.skill_pos_;
}
inline void PlayerUseSkillMessage::_internal_set_skill_pos(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skill_pos_ = value;
}

// uint32 target_player = 2;
inline void PlayerUseSkillMessage::clear_target_player() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_player_ = 0u;
}
inline ::uint32_t PlayerUseSkillMessage::target_player() const {
  // @@protoc_insertion_point(field_get:PlayerUseSkillMessage.target_player)
  return _internal_target_player();
}
inline void PlayerUseSkillMessage::set_target_player(::uint32_t value) {
  _internal_set_target_player(value);
  // @@protoc_insertion_point(field_set:PlayerUseSkillMessage.target_player)
}
inline ::uint32_t PlayerUseSkillMessage::_internal_target_player() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_player_;
}
inline void PlayerUseSkillMessage::_internal_set_target_player(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_player_ = value;
}

// float x = 3;
inline void PlayerUseSkillMessage::clear_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = 0;
}
inline float PlayerUseSkillMessage::x() const {
  // @@protoc_insertion_point(field_get:PlayerUseSkillMessage.x)
  return _internal_x();
}
inline void PlayerUseSkillMessage::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:PlayerUseSkillMessage.x)
}
inline float PlayerUseSkillMessage::_internal_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.x_;
}
inline void PlayerUseSkillMessage::_internal_set_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.x_ = value;
}

// float y = 4;
inline void PlayerUseSkillMessage::clear_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = 0;
}
inline float PlayerUseSkillMessage::y() const {
  // @@protoc_insertion_point(field_get:PlayerUseSkillMessage.y)
  return _internal_y();
}
inline void PlayerUseSkillMessage::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:PlayerUseSkillMessage.y)
}
inline float PlayerUseSkillMessage::_internal_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.y_;
}
inline void PlayerUseSkillMessage::_internal_set_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// PlayerEnterSyncMessage

// uint32 uid = 1;
inline void PlayerEnterSyncMessage::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = 0u;
}
inline ::uint32_t PlayerEnterSyncMessage::uid() const {
  // @@protoc_insertion_point(field_get:PlayerEnterSyncMessage.uid)
  return _internal_uid();
}
inline void PlayerEnterSyncMessage::set_uid(::uint32_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:PlayerEnterSyncMessage.uid)
}
inline ::uint32_t PlayerEnterSyncMessage::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_;
}
inline void PlayerEnterSyncMessage::_internal_set_uid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = value;
}

// bool self = 2;
inline void PlayerEnterSyncMessage::clear_self() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.self_ = false;
}
inline bool PlayerEnterSyncMessage::self() const {
  // @@protoc_insertion_point(field_get:PlayerEnterSyncMessage.self)
  return _internal_self();
}
inline void PlayerEnterSyncMessage::set_self(bool value) {
  _internal_set_self(value);
  // @@protoc_insertion_point(field_set:PlayerEnterSyncMessage.self)
}
inline bool PlayerEnterSyncMessage::_internal_self() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.self_;
}
inline void PlayerEnterSyncMessage::_internal_set_self(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.self_ = value;
}

// -------------------------------------------------------------------

// PlayerExitSyncMessage

// uint32 uid = 1;
inline void PlayerExitSyncMessage::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = 0u;
}
inline ::uint32_t PlayerExitSyncMessage::uid() const {
  // @@protoc_insertion_point(field_get:PlayerExitSyncMessage.uid)
  return _internal_uid();
}
inline void PlayerExitSyncMessage::set_uid(::uint32_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:PlayerExitSyncMessage.uid)
}
inline ::uint32_t PlayerExitSyncMessage::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_;
}
inline void PlayerExitSyncMessage::_internal_set_uid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = value;
}

// -------------------------------------------------------------------

// PlayerPositionSyncMessage

// uint32 uid = 1;
inline void PlayerPositionSyncMessage::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = 0u;
}
inline ::uint32_t PlayerPositionSyncMessage::uid() const {
  // @@protoc_insertion_point(field_get:PlayerPositionSyncMessage.uid)
  return _internal_uid();
}
inline void PlayerPositionSyncMessage::set_uid(::uint32_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:PlayerPositionSyncMessage.uid)
}
inline ::uint32_t PlayerPositionSyncMessage::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_;
}
inline void PlayerPositionSyncMessage::_internal_set_uid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = value;
}

// float pos_x = 2;
inline void PlayerPositionSyncMessage::clear_pos_x() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_x_ = 0;
}
inline float PlayerPositionSyncMessage::pos_x() const {
  // @@protoc_insertion_point(field_get:PlayerPositionSyncMessage.pos_x)
  return _internal_pos_x();
}
inline void PlayerPositionSyncMessage::set_pos_x(float value) {
  _internal_set_pos_x(value);
  // @@protoc_insertion_point(field_set:PlayerPositionSyncMessage.pos_x)
}
inline float PlayerPositionSyncMessage::_internal_pos_x() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pos_x_;
}
inline void PlayerPositionSyncMessage::_internal_set_pos_x(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_x_ = value;
}

// float pos_y = 3;
inline void PlayerPositionSyncMessage::clear_pos_y() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_y_ = 0;
}
inline float PlayerPositionSyncMessage::pos_y() const {
  // @@protoc_insertion_point(field_get:PlayerPositionSyncMessage.pos_y)
  return _internal_pos_y();
}
inline void PlayerPositionSyncMessage::set_pos_y(float value) {
  _internal_set_pos_y(value);
  // @@protoc_insertion_point(field_set:PlayerPositionSyncMessage.pos_y)
}
inline float PlayerPositionSyncMessage::_internal_pos_y() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pos_y_;
}
inline void PlayerPositionSyncMessage::_internal_set_pos_y(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pos_y_ = value;
}

// -------------------------------------------------------------------

// PlayerHealthSyncMessage

// uint32 uid = 1;
inline void PlayerHealthSyncMessage::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = 0u;
}
inline ::uint32_t PlayerHealthSyncMessage::uid() const {
  // @@protoc_insertion_point(field_get:PlayerHealthSyncMessage.uid)
  return _internal_uid();
}
inline void PlayerHealthSyncMessage::set_uid(::uint32_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:PlayerHealthSyncMessage.uid)
}
inline ::uint32_t PlayerHealthSyncMessage::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_;
}
inline void PlayerHealthSyncMessage::_internal_set_uid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = value;
}

// int32 health = 2;
inline void PlayerHealthSyncMessage::clear_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_ = 0;
}
inline ::int32_t PlayerHealthSyncMessage::health() const {
  // @@protoc_insertion_point(field_get:PlayerHealthSyncMessage.health)
  return _internal_health();
}
inline void PlayerHealthSyncMessage::set_health(::int32_t value) {
  _internal_set_health(value);
  // @@protoc_insertion_point(field_set:PlayerHealthSyncMessage.health)
}
inline ::int32_t PlayerHealthSyncMessage::_internal_health() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.health_;
}
inline void PlayerHealthSyncMessage::_internal_set_health(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.health_ = value;
}

// int32 max_health = 3;
inline void PlayerHealthSyncMessage::clear_max_health() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_health_ = 0;
}
inline ::int32_t PlayerHealthSyncMessage::max_health() const {
  // @@protoc_insertion_point(field_get:PlayerHealthSyncMessage.max_health)
  return _internal_max_health();
}
inline void PlayerHealthSyncMessage::set_max_health(::int32_t value) {
  _internal_set_max_health(value);
  // @@protoc_insertion_point(field_set:PlayerHealthSyncMessage.max_health)
}
inline ::int32_t PlayerHealthSyncMessage::_internal_max_health() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_health_;
}
inline void PlayerHealthSyncMessage::_internal_set_max_health(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_health_ = value;
}

// -------------------------------------------------------------------

// PlayerAttackSyncMessage

// uint32 from = 1;
inline void PlayerAttackSyncMessage::clear_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_ = 0u;
}
inline ::uint32_t PlayerAttackSyncMessage::from() const {
  // @@protoc_insertion_point(field_get:PlayerAttackSyncMessage.from)
  return _internal_from();
}
inline void PlayerAttackSyncMessage::set_from(::uint32_t value) {
  _internal_set_from(value);
  // @@protoc_insertion_point(field_set:PlayerAttackSyncMessage.from)
}
inline ::uint32_t PlayerAttackSyncMessage::_internal_from() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_;
}
inline void PlayerAttackSyncMessage::_internal_set_from(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_ = value;
}

// uint32 to = 2;
inline void PlayerAttackSyncMessage::clear_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_ = 0u;
}
inline ::uint32_t PlayerAttackSyncMessage::to() const {
  // @@protoc_insertion_point(field_get:PlayerAttackSyncMessage.to)
  return _internal_to();
}
inline void PlayerAttackSyncMessage::set_to(::uint32_t value) {
  _internal_set_to(value);
  // @@protoc_insertion_point(field_set:PlayerAttackSyncMessage.to)
}
inline ::uint32_t PlayerAttackSyncMessage::_internal_to() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_;
}
inline void PlayerAttackSyncMessage::_internal_set_to(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_ = value;
}

// float cool_down = 3;
inline void PlayerAttackSyncMessage::clear_cool_down() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cool_down_ = 0;
}
inline float PlayerAttackSyncMessage::cool_down() const {
  // @@protoc_insertion_point(field_get:PlayerAttackSyncMessage.cool_down)
  return _internal_cool_down();
}
inline void PlayerAttackSyncMessage::set_cool_down(float value) {
  _internal_set_cool_down(value);
  // @@protoc_insertion_point(field_set:PlayerAttackSyncMessage.cool_down)
}
inline float PlayerAttackSyncMessage::_internal_cool_down() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cool_down_;
}
inline void PlayerAttackSyncMessage::_internal_set_cool_down(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cool_down_ = value;
}

// -------------------------------------------------------------------

// PlayerManaSyncMessage

// uint32 uid = 1;
inline void PlayerManaSyncMessage::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = 0u;
}
inline ::uint32_t PlayerManaSyncMessage::uid() const {
  // @@protoc_insertion_point(field_get:PlayerManaSyncMessage.uid)
  return _internal_uid();
}
inline void PlayerManaSyncMessage::set_uid(::uint32_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:PlayerManaSyncMessage.uid)
}
inline ::uint32_t PlayerManaSyncMessage::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_;
}
inline void PlayerManaSyncMessage::_internal_set_uid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = value;
}

// int32 mana = 2;
inline void PlayerManaSyncMessage::clear_mana() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mana_ = 0;
}
inline ::int32_t PlayerManaSyncMessage::mana() const {
  // @@protoc_insertion_point(field_get:PlayerManaSyncMessage.mana)
  return _internal_mana();
}
inline void PlayerManaSyncMessage::set_mana(::int32_t value) {
  _internal_set_mana(value);
  // @@protoc_insertion_point(field_set:PlayerManaSyncMessage.mana)
}
inline ::int32_t PlayerManaSyncMessage::_internal_mana() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mana_;
}
inline void PlayerManaSyncMessage::_internal_set_mana(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mana_ = value;
}

// int32 max_mana = 3;
inline void PlayerManaSyncMessage::clear_max_mana() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_mana_ = 0;
}
inline ::int32_t PlayerManaSyncMessage::max_mana() const {
  // @@protoc_insertion_point(field_get:PlayerManaSyncMessage.max_mana)
  return _internal_max_mana();
}
inline void PlayerManaSyncMessage::set_max_mana(::int32_t value) {
  _internal_set_max_mana(value);
  // @@protoc_insertion_point(field_set:PlayerManaSyncMessage.max_mana)
}
inline ::int32_t PlayerManaSyncMessage::_internal_max_mana() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_mana_;
}
inline void PlayerManaSyncMessage::_internal_set_max_mana(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_mana_ = value;
}

// -------------------------------------------------------------------

// PlayerAttackSpeedSyncMessage

// uint32 uid = 1;
inline void PlayerAttackSpeedSyncMessage::clear_uid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = 0u;
}
inline ::uint32_t PlayerAttackSpeedSyncMessage::uid() const {
  // @@protoc_insertion_point(field_get:PlayerAttackSpeedSyncMessage.uid)
  return _internal_uid();
}
inline void PlayerAttackSpeedSyncMessage::set_uid(::uint32_t value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:PlayerAttackSpeedSyncMessage.uid)
}
inline ::uint32_t PlayerAttackSpeedSyncMessage::_internal_uid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uid_;
}
inline void PlayerAttackSpeedSyncMessage::_internal_set_uid(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uid_ = value;
}

// float speed = 2;
inline void PlayerAttackSpeedSyncMessage::clear_speed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = 0;
}
inline float PlayerAttackSpeedSyncMessage::speed() const {
  // @@protoc_insertion_point(field_get:PlayerAttackSpeedSyncMessage.speed)
  return _internal_speed();
}
inline void PlayerAttackSpeedSyncMessage::set_speed(float value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:PlayerAttackSpeedSyncMessage.speed)
}
inline float PlayerAttackSpeedSyncMessage::_internal_speed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.speed_;
}
inline void PlayerAttackSpeedSyncMessage::_internal_set_speed(float value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.speed_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // test_2eproto_2epb_2eh
